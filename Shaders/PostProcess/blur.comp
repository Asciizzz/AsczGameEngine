#version 450

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout(binding = 0) uniform sampler2D uInput;
layout(binding = 1, rgba8) uniform writeonly image2D uOutput;

// Simple blur post-process effect
void main() {
    ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
    vec2 texSize = vec2(imageSize(uOutput));
    
    if (coord.x >= texSize.x || coord.y >= texSize.y) {
        return;
    }
    
    vec2 texCoord = (vec2(coord) + 0.5) / texSize;
    vec2 texelSize = 1.0 / texSize;
    
    // Simple 3x3 blur kernel
    vec3 result = vec3(0.0);
    for (int x = -1; x <= 1; x++) {
        for (int y = -1; y <= 1; y++) {
            vec2 sampleCoord = texCoord + vec2(x, y) * texelSize;
            result += texture(uInput, sampleCoord).rgb;
        }
    }
    result /= 9.0;
    
    // Output the blurred color
    imageStore(uOutput, coord, vec4(result, 1.0));
}
