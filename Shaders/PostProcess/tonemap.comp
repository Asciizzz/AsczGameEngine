#version 450

layout(local_size_x = 16, local_size_y = 16, local_size_z = 1) in;

layout(binding = 0) uniform sampler2D uInput;
layout(binding = 1, rgba8) uniform writeonly image2D uOutput;

// Simple tone mapping post-process effect
void main() {
    ivec2 coord = ivec2(gl_GlobalInvocationID.xy);
    vec2 texSize = vec2(imageSize(uOutput));
    
    if (coord.x >= texSize.x || coord.y >= texSize.y) {
        return;
    }
    
    vec2 texCoord = (vec2(coord) + 0.5) / texSize;
    vec3 color = texture(uInput, texCoord).rgb;
    
    // Simple Reinhard tone mapping
    color = color / (color + vec3(1.0));
    
    // Output the tone mapped color
    imageStore(uOutput, coord, vec4(color, 1.0));
}
